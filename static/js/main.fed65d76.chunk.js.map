{"version":3,"sources":["components/Top/TopTop/QuestionNo.jsx","components/Top/TopTop/TopFiller.jsx","components/Top/TopTop/Timer.jsx","components/Top/TopTop/TopTop.jsx","components/Top/TopBot/Question.jsx","components/Top/TopBot/TopBot.jsx","components/Top/Top.jsx","components/Mid/Answer/Answer.jsx","components/Mid/Answer/WrongAnswer.jsx","components/Mid/Mid.jsx","components/Bottom/Bottom.jsx","components/App.jsx","clients/firebase.js","index.js"],"names":["QuestionNo","react_default","a","createElement","className","title","this","props","qNum","Infinity","Component","TopFiller","Timer","time","Top","TopTop_QuestionNo","TopTop_TopFiller","TopTop_Timer","Question","data","TopBot_Question","questionText","TopTop","TopBot","Answer","respond","no","console","log","_this","cName","onClick","handleClick","WrongAnswer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextClicked","actualAnswer","nextQuestion","Mid","answerOnClick","iterateQuestion","cmps","i","push","Mid_Answer_Answer","textData","responded","userWrongAnswer","Answer_WrongAnswer","correctAnswer","nextQuestionRequest","Bottom","App","document","assertThisInitialized","firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","buildFirebase","ref","once","then","questions","val","setState","fetched","newList","key","qClass","question_text","choices","correct_choice_index","correctChoice","answerChoice","answerIndex","oldList","nList","index","randomInt","removingObj","splice","indexOf","qList","totalQ","QuestionList","state","currentIndex","currentQ","timeLength","timer","setInterval","answerBoxText","min","max","Math","floor","random","q","getQuestion","getAnswer","question","changeRenderText","_this2","doc","components_Top_Top","components_Mid_Mid","components_Bottom_Bottom","Array","isArray","NaN","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.fed65d76.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import '../css/App.css';\n// import components\n\nclass QuestionNo extends Component {\n\n  render() {\n    return (\n      <div className=\"QuestionNo\" title=\"Question number\">\n        <div>{this.props.qNum || Infinity}</div>\n      </div>\n    );\n  }\n}\n\nexport default QuestionNo;","import React, { Component } from 'react';\n// import components\n\nclass TopFiller extends Component {\n\n  render() {\n    return (\n      <div className=\"TopFiller\">\n      </div>\n    );\n  }\n}\n\nexport default TopFiller;","import React, { Component } from 'react';\n// import components\n\nclass Timer extends Component {\n\n  render() {\n    return (\n      <div className=\"Timer\">\n          <div className=\"timerNum\" title=\"when time run out we assume you picked the wrong answer\">\n            {this.props.time}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;","import React, { Component } from 'react';\n//components\nimport QuestionNo from './QuestionNo.jsx';\nimport TopFiller from './TopFiller.jsx';\nimport Timer from './Timer.jsx';\n\nclass Top extends Component {\n\n  render() {\n    return (\n      <div className=\"TopTop\">\n        <QuestionNo qNum={this.props.qNum}/>\n        <TopFiller/>\n        <Timer time={this.props.time}/>\n      </div>\n    );\n  }\n}\n\nexport default Top;","import React, { Component } from 'react';\n// import '../css/App.css';\n// import components\n\nclass Question extends Component {\n\n  render() {\n    return (\n      <div className=\"Question\">\n        {this.props.data}\n      </div>\n    );\n  }\n}\n\nexport default Question;","import React, { Component } from 'react';\nimport Question from './Question.jsx';\n\n\nclass Top extends Component {\n\n  render() {\n    return (\n      <div className=\"TopBot\">\n          <Question data={this.props.questionText}/>\n      </div>\n    );\n  }\n}\n\nexport default Top;","import React, { Component } from 'react';\n// import components\nimport TopTop from './TopTop/TopTop.jsx';\nimport TopBot from './TopBot/TopBot.jsx';\n\nclass Top extends Component {\n\n  render() {\n    return (\n      <div className=\"Top container\">\n        <TopTop qNum={this.props.qNum} time={this.props.time}/>\n        <TopBot questionText={this.props.questionText}/>\n      </div>\n    );\n  }\n}\n\nexport default Top;","import React, { Component } from 'react';\n// import components\n\nclass Answer extends Component {\n\n  handleClick(){\n    this.props.respond(this.props.no);\n    console.log(\"Clicked\");\n  }\n\n  render() {\n    return (\n      <div className={\"Answer \" + this.props.cName} onClick={() => this.handleClick()}>\n        {this.props.data}\n        \n      </div>\n    );\n  }\n}\n\nexport default Answer;","import React, { Component } from 'react';\n// import '../css/App.css';\n// import components\n\nclass WrongAnswer extends Component {\n  constructor(props){\n    super(props);\n  }\n\nnextQuestion(){\n  this.props.nextClicked();\n}\n\n  \n  render() {\n    return (\n      <div className=\"incorrectContainer\">\n        <div className=\"incorrectTitle\">Sorry, the answer you picked is wrong</div>\n        <div className=\"incorrectTop\">the correct answer is: {this.props.actualAnswer}</div>\n        <div className=\"incorrectbot\" onClick={()=>this.nextQuestion()}>click here for next question.</div>\n      </div>\n    );\n  }\n}\n\nexport default WrongAnswer;","import React, { Component } from 'react';\n// import '../css/App.css';\n// import components\nimport Answer from './Answer/Answer.jsx';\nimport WrongAnswer from './Answer/WrongAnswer.jsx'\n\nclass Mid extends Component {\n  constructor(props){\n    super(props);\n  }\n  responded(no){\n    this.props.answerOnClick(no);\n  }\n  nextQuestionRequest(){\n    this.props.iterateQuestion();\n  }\n\n\n\n\n  render() {\n    let cmps =[];\n    for (let i = 0;i<4;i++){\n      cmps.push(<Answer cName={\"answerButton\" + i} no={i} data={this.props.textData[i]} respond={(no) => this.responded(no)}/>);\n    }\n\n    if(this.props.userWrongAnswer){ //either true or false  pass in correct answer...... true means wrong answer\n      return (\n        <div className=\"Mid container\">\n          <WrongAnswer actualAnswer={this.props.correctAnswer} nextClicked={() => this.nextQuestionRequest()}/>\n        </div>\n      )\n    }else{\n      return (\n        <div className=\"Mid container\">\n          {cmps}\n        </div>\n      )\n    }\n\n  }\n}\n\nexport default Mid;","import React, { Component } from 'react';\n// import components\n\nclass Bottom extends Component {\n\n  render() {\n    return (\n      <div className=\"Bottom container\">\n\n      </div>\n    );\n  }\n}\n\nexport default Bottom;","import React, { Component } from 'react';\nimport '../css/App.css';\n// import components\nimport Top from './Top/Top.jsx';\nimport Mid from './Mid/Mid.jsx';\nimport Bottom from './Bottom/Bottom.jsx';\n//import firebase \nimport {buildFirebase} from '../clients/firebase.js';\nimport {getRandomQuestion} from '../clients/firebase.js';\n\n\n//https://studio-trivia-db.firebaseapp.com/\n\n//app class\nclass App extends Component {\n  constructor(props){\n    super(props);\n    let document = this;\n    //get question fom fire base\n    var database = buildFirebase();\n    var databaseRef = database.ref(\"/questions\");\n    databaseRef.once(\"value\").then(function(data) {\n    const questions = data.val();\n    // Do something with the questions\n      document.setState({fetched: true});\n      //query questions into objects\n      let newList = [];\n      for (let key in questions){\n        let qClass = new Question(\n          questions[key].question_text,\n          questions[key].choices,\n          questions[key].correct_choice_index\n        );\n        //shuffle answer choices and index\n        let correctChoice = qClass.answerChoice[qClass.answerIndex];\n        let oldList = qClass.answerChoice;\n        let nList = [];\n        while(oldList.length > 0){\n          //shuffle choices\n          let index = document.randomInt(0, oldList.length - 1);\n          let removingObj = oldList[index];\n          oldList.splice(index, 1);\n          nList.push(removingObj);\n        }\n        qClass.answerChoice = nList;\n        qClass.correct_choice_index = qClass.answerChoice.indexOf(correctChoice);\n        qClass.answerIndex = qClass.correct_choice_index;\n        //document.state.QuestionList.push(qClass);\n        newList.push(qClass);\n        \n      }\n      //shuffle qList\n      let qList = [];\n      while (newList.length > 0){\n        let index = document.randomInt(0, newList.length - 1);\n        let removingObj = newList[index];\n        newList.splice(index, 1);\n        qList.push(removingObj);\n      }\n      document.setState({totalQ: qList.length});\n      document.setState({QuestionList: qList}, () => {\n        document.iterateQuestion();\n      });\n    });\n\n\n    //set state\n    this.state = {\n      //variables\n      currentIndex: 0,\n      currentQ: {},\n      totalQ: 0,\n      QuestionList: [],\n      fetched: false,\n      userWrongAnswer: false,\n      timeLength: 15,\n      time: 15,\n      timer: setInterval(()=>{\n        if (this.state.userWrongAnswer === false){\n          let time = this.state.time - 1;\n          if (time <= 0){\n            this.setState({time: time, userWrongAnswer: true});\n          }else{\n            this.setState({time: time});\n          }\n        }\n      }, 1000),\n      //rendering\n      answerBoxText: [\"Empty\", \"Empty\", \"Empty2\", \"Empty\"], //<-change to change answer.text\n      questionText: \"methink drown bliindsaddaw dumb, no more drowning you hear me. im changed. put money in thy purse. I am not who I am??????????????????????? PROSANA (._.)7/\"\n    };\n  }\n  //misc fun\n  randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n  }\n  //real method\n  renderQuestion(){\n    let q = this.state.QuestionList[this.state.currentIndex]\n    if (q){\n      // this.state.questionText = q.getQuestion();\n      this.setState({questionText: q.getQuestion()});\n      // this.state.answerBoxText = q.getAnswer();\n      this.setState({answerBoxText: q.getAnswer()});\n      // this.state.currentQ = q;\n      this.setState({currentQ: q});\n    }\n  }\n  //functions\n  answerOnClick(no){\n    //this.iterateQuestion()\n    let question = this.state.currentQ;\n    if(question.answerIndex === no){\n      //if answer correct-----------------------------------------------------------------------------\n\n\n\n      this.iterateQuestion();\n\n    }else{\n      this.setState({userWrongAnswer:true})\n\n    }\n\n  }\n  changeRenderText(){\n    this.setState({questionText : this.state.QuestionList[this.state.currentIndex].question});\n    this.setState({answerBoxText : this.state.QuestionList[this.state.currentIndex].answerChoice})\n  }\n  iterateQuestion(){\n    let index = this.state.currentIndex;\n    index += 1;\n    if (index >= this.state.QuestionList.length){\n      index = 0;\n    }\n    this.setState({currentIndex: index, userWrongAnswer: false, time: this.state.timeLength});\n    this.setState({currentQ: this.state.QuestionList[this.state.currentIndex]})\n    this.changeRenderText();\n  }\n\n  render() {\n    let doc = this;\n    return (\n      <div className=\"app\"> \n        <Top qNum={this.state.currentIndex} questionText={this.state.questionText} time={this.state.time}/>\n\n        <Mid \n          answerOnClick={(no) => this.answerOnClick(no)}  \n          textData={this.state.answerBoxText} \n          userWrongAnswer={this.state.userWrongAnswer} \n          iterateQuestion={() => this.iterateQuestion()}\n          correctAnswer={\n            (function(){\n              if (doc.state.currentQ){\n                if (doc.state.currentQ.getAnswer){\n                  return doc.state.currentQ.getAnswer() ? doc.state.currentQ.getAnswer() : \"doesnt exist\";\n                }else{\n                  return null;\n                }\n              }else{\n                return null;\n              }\n            }\n            )()\n          }\n        />\n\n        <Bottom/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//other class?\nclass Question {\n  constructor(question, answerChoice, answerIndex){\n    this.question = typeof question === \"string\" ? question : \"question is not string\" ; //Array.isArray(question) ? question : [];\n    this.answerChoice = Array.isArray(answerChoice) ? answerChoice : [\"undefined\", \"undefined\", \"undefined\", \"undefined\"];\n    this.answerIndex = typeof answerIndex === 'number' ? answerIndex : NaN;\n  }    \n  getAnswer(){\n    return this.answerChoice[this.answerIndex] ? this.answerChoice[this.answerIndex] : null;\n  }\n  getQuestion(){\n    return this.question ? this.question : null\n  }\n  \n}\n\n// //\n// class fakeFirebaseImport(){\n//   constructor(){\n    \n//   }\n// }\n// //\n// class getRandomQuestion{\n//   constructor(questions){\n//     var keys = Object.keys(questions)\n//     const randomIndex = Math.floor(Math.random() * keys.length);\n//     return questions[keys[randomIndex]];\n//   }\n  \n// }","import firebase from 'firebase';\n\nexport function buildFirebase() {\n  if (firebase.apps.length === 0) {\n    const app = firebase.initializeApp({\n      apiKey: \"AIzaSyADAYC7lX5QVEspv8BUeV2uDqrFle8yQpk\",\n      authDomain: \"studio-trivia-db.firebaseapp.com\",\n      databaseURL: \"https://studio-trivia-db.firebaseio.com\",\n      projectId: \"studio-trivia-db\",\n      storageBucket: \"studio-trivia-db.appspot.com\",\n      messagingSenderId: \"736024037811\"\n    });\n    return firebase.database(app);\n  } else {\n    return firebase.apps[0].database();\n  }\n}\n\nexport function getRandomQuestion(questions) {\n  var keys = Object.keys(questions)\n  const randomIndex = Math.floor(Math.random() * keys.length);\n  return questions[keys[randomIndex]];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/App.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}